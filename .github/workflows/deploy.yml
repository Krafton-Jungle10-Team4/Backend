name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "$EC2_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          tar -czf deploy.tar.gz app/ requirements.txt Dockerfile docker-compose.yml nginx.conf
          
          scp -o StrictHostKeyChecking=no deploy.tar.gz ${EC2_USER}@${EC2_HOST}:~/Backend/
          
          ssh -o StrictHostKeyChecking=no \
              -o ServerAliveInterval=60 \
              -o ServerAliveCountMax=30 \
              ${EC2_USER}@${EC2_HOST} << 'ENDSSH'
            cd ~/Backend
            
            # .env.local 백업
            [ -f .env.local ] && cp .env.local .env.backup
            
            # 압축 해제
            tar -xzf deploy.tar.gz
            rm deploy.tar.gz
            
            # .env.local 복원
            [ -f .env.backup ] && mv .env.backup .env.local
            
            # .env 확인
            if [ ! -f .env.local ]; then
              echo "❌ .env.local 없음"
              exit 1
            fi
            
            # 인프라 확인
            if ! docker-compose ps 2>/dev/null | grep -q "chromadb.*Up"; then
              docker-compose up -d chromadb nginx
              sleep 15
            fi
            
            # 빌드 & 배포 (백그라운드)
            nohup bash -c '
              docker-compose build backend && \
              docker-compose up -d --no-deps backend
            ' > ~/deploy.log 2>&1 &
            
            echo "✅ 배포 시작"
            sleep 10
          ENDSSH