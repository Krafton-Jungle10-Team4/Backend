name: Auto Create PR

on:
  push:
    branches:
      - 'feature/**'
      - 'bugfix/**'

jobs:
  create-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Check if PR exists
        id: check-pr
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${context.ref.replace('refs/heads/', '')}`,
              state: 'open'
            });
            return pulls.length > 0;
      
      - name: Extract issue number
        if: steps.check-pr.outputs.result == 'false'
        id: extract
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          ISSUE_NUMBER=$(echo $BRANCH_NAME | grep -oP 'issue-\K\d+' || echo "")
          echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
      
      - name: Create Pull Request
        if: steps.check-pr.outputs.result == 'false'
        uses: actions/github-script@v7
        env:
          ISSUE_NUMBER: ${{ steps.extract.outputs.ISSUE_NUMBER }}
        with:
          script: |
            const issueNumber = process.env.ISSUE_NUMBER;
            const branchName = context.ref.replace('refs/heads/', '');
            
            let title = branchName;
            let body = `## 📝 변경 사항\n\n## ✅ 체크리스트\n- [ ] 테스트 완료`;
            
            if (issueNumber) {
              title = `[#${issueNumber}] ${branchName}`;
              body = `## 🔗 Related Issue\nCloses #${issueNumber}\n\n` + body;
            }
            
            await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              head: branchName,
              base: 'develop',
              body: body
            });